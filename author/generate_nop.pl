#!/usr/bin/env perl

# This script generates `/lib/Web/ChromeLogger/NOP.pm`.

use strict;
use warnings;
use Class::Inspector;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Web::ChromeLogger;

my @public_methods = grep { $_ !~ /(?:new|finalize)/ } @{Class::Inspector->methods('Web::ChromeLogger', 'public')};

my $nop_source = <<'...';
# =========================================================================
# THIS FILE IS AUTOMATICALLY GENERATED BY `author/generate_nop.pl`.
# DO NOT EDIT DIRECTLY.
# =========================================================================

package Web::ChromeLogger::NOP;
use strict;
use warnings;
use Carp ();

sub new {
    my $class = shift;
    bless {}, $class;
}

sub finalize {
    Carp::croak "Web::ChromeLogger::NOP cannot finalize logs";
}

...

for my $public_method (@public_methods) {
    $nop_source .= <<"...";
sub $public_method {}

...
}

$nop_source .= <<'...';
1;
__END__

=encoding utf-8

=head1 NAME

Web::ChromeLogger::NOP - Dummy of Web::ChromeLogger

=head1 SYNOPSIS

    use Web::ChromeLogger::NOP;

    get '/', sub {
        my $logger = Web::ChromeLogger::NOP->new();
        $logger->info('hey!'); # NOP!

        my $html = render_html();

        return [
            200,
            ['X-ChromeLogger-Data' => $logger->finalize()], # NOP!
            $html,
        ];
    };

=head1 DESCRIPTION

Web::ChromeLogger::NOP is a dummy of C<Web::ChromeLogger>.

This class provides methods that don't work anything.

=head1 METHODS

=over 4

=item C<< my $logger = Web::ChromeLogger::NOP->new() >>

Returns instance of Web::ChromeLogger::NOP.

=item C<< $logger->finalize() >>

Always throws exception.

=back

And other provided methods are the same as C<Web::ChromeLogger>, but they don't work anything.

=head1 SEE ALSO

C<Web::ChromeLogger>

=head1 LICENSE

Copyright (C) Tokuhiro Matsuno.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

...

open my $fh, '>', "$FindBin::Bin/../lib/Web/ChromeLogger/NOP.pm";
print $fh $nop_source;

